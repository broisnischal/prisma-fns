import { Prisma } from "@prisma/client";

// inspired from kent-c-@epic-web/remember

/**
 * Defines an extension for the Prisma client to handle remembering instances adds singletons
 *
 * @param {Prisma} prisma - The Prisma client instance.
 * @return {Object} The defined extension for remembering instances.
 */
export default Prisma.defineExtension((prisma) => {
	return remember("prisma", () => prisma);
});

/**
 * Remembers and retrieves a value by a given name, or the value generated by `getValue` if the name doesn't exist.
 * The return type is inferred from the return type of `getValue`.
 *
 * @template Value
 * @param {string} name - The name under which to remember the value.
 * @param {() => Value} getValue - The function that generates the value to remember.
 * @returns {Value} - The remembered value.
 */
export function remember<T>(name: string, getValue: () => T): T {
	const thusly = globalThis as any;
	thusly.__remember_epic_web ??= new Map();
	if (!thusly.__remember_epic_web.has(name)) {
		thusly.__remember_epic_web.set(name, getValue());
	}
	return thusly.__remember_epic_web.get(name);
}
